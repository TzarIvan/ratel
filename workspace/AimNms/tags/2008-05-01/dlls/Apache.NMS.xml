<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Apache.NMS</name>
    </assembly>
    <members>
        <member name="T:Apache.NMS.IBytesMessage">
            <summary>
            Represents a binary based message
            </summary>
        </member>
        <member name="T:Apache.NMS.IMessage">
            <summary>
            Represents a message either to be sent to a message broker or received from a message broker
            </summary>
        </member>
        <member name="M:Apache.NMS.IMessage.Acknowledge">
            <summary>
            If using client acknowledgement mode on the session then this method will acknowledge that the
            message has been processed correctly.
            </summary>
        </member>
        <member name="P:Apache.NMS.IMessage.Properties">
            <summary>
            Provides access to the message properties (headers)
            </summary>
        </member>
        <member name="P:Apache.NMS.IMessage.NMSCorrelationID">
            <summary>
            The correlation ID used to correlate messages from conversations or long running business processes
            </summary>
        </member>
        <member name="P:Apache.NMS.IMessage.NMSDestination">
            <summary>
            The destination of the message
            </summary>
        </member>
        <member name="P:Apache.NMS.IMessage.NMSTimeToLive">
            <summary>
            The amount of time that this message is valid for.  null If this
            message does not expire.
            </summary>
        </member>
        <member name="P:Apache.NMS.IMessage.NMSMessageId">
            <summary>
            The message ID which is set by the provider
            </summary>
        </member>
        <member name="P:Apache.NMS.IMessage.NMSPersistent">
            <summary>
            Whether or not this message is persistent
            </summary>
        </member>
        <member name="P:Apache.NMS.IMessage.NMSPriority">
            <summary>
            The Priority on this message
            </summary>
        </member>
        <member name="P:Apache.NMS.IMessage.NMSRedelivered">
            <summary>
            Returns true if this message has been redelivered to this or another consumer before being acknowledged successfully.
            </summary>
        </member>
        <member name="P:Apache.NMS.IMessage.NMSReplyTo">
            <summary>
            The destination that the consumer of this message should send replies to
            </summary>
        </member>
        <member name="P:Apache.NMS.IMessage.NMSTimestamp">
            <summary>
            The timestamp of when the message was pubished in UTC time.  If the publisher disables setting 
            the timestamp on the message, the time will be set to the start of the UNIX epoc (1970-01-01 00:00:00).
            </summary>
        </member>
        <member name="P:Apache.NMS.IMessage.NMSType">
            <summary>
            The type name of this message
            </summary>
        </member>
        <member name="T:Apache.NMS.AcknowledgementMode">
            <summary>
            The mode used to acknowledge messages after they are consumed
            </summary>
        </member>
        <member name="F:Apache.NMS.AcknowledgementMode.AutoAcknowledge">
                             * With this acknowledgment mode, the session will not
            				 * acknowledge receipt of a message since the broker assumes
            				 * successful receipt of a message after the onMessage handler
            				 * has returned without error.
        </member>
        <member name="F:Apache.NMS.AcknowledgementMode.DupsOkAcknowledge">
            With this acknowledgment mode, the session automatically
            acknowledges a client's receipt of a message either when
            the session has successfully returned from a call to receive
            or when the message listener the session has called to
            process the message successfully returns.  Acknowlegements
            may be delayed in this mode to increase performance at
            the cost of the message being redelivered this client fails.
        </member>
        <member name="F:Apache.NMS.AcknowledgementMode.ClientAcknowledge">
            With this acknowledgment mode, the client acknowledges a
            consumed message by calling the message's acknowledge method.
        </member>
        <member name="F:Apache.NMS.AcknowledgementMode.Transactional">
            Messages will be consumed when the transaction commits.
        </member>
        <member name="T:Apache.NMS.ExceptionListener">
            <summary>
            A delegate that can receive transport level exceptions.
            </summary>
        </member>
        <member name="T:Apache.NMS.IConnection">
            <summary>
            Represents a connection with a message broker
            </summary>
        </member>
        <member name="T:Apache.NMS.IStartable">
            <summary>
            A lifecycle for NMS objects to indicate they can be started
            </summary>
        </member>
        <member name="T:Apache.NMS.IStoppable">
            <summary>
            A lifecycle for NMS objects to indicate they can be stopped
            </summary>
        </member>
        <member name="M:Apache.NMS.IConnection.CreateSession">
            <summary>
            Creates a new session to work on this connection
            </summary>
        </member>
        <member name="M:Apache.NMS.IConnection.CreateSession(Apache.NMS.AcknowledgementMode)">
            <summary>
            Creates a new session to work on this connection
            </summary>
        </member>
        <member name="M:Apache.NMS.IConnection.Close">
            <summary>
            Closes the connection.
            </summary>
        </member>
        <member name="P:Apache.NMS.IConnection.AcknowledgementMode">
            <summary>
            The default acknowledgement mode
            </summary>
        </member>
        <member name="P:Apache.NMS.IConnection.ClientId">
            <summary>
            Sets the unique clienet ID for this connection before Start() or returns the
            unique client ID after the connection has started
            </summary>
        </member>
        <member name="E:Apache.NMS.IConnection.ExceptionListener">
            <summary>
            An asynchronous listener which can be notified if an error occurs
            </summary>
        </member>
        <member name="T:Apache.NMS.IConnectionFactory">
            <summary>
            A Factory of IConnection objects
            </summary>
        </member>
        <member name="M:Apache.NMS.IConnectionFactory.CreateConnection">
            <summary>
            Creates a new connection
            </summary>
        </member>
        <member name="M:Apache.NMS.IConnectionFactory.CreateConnection(System.String,System.String)">
            <summary>
            Creates a new connection with the given user name and password
            </summary>
        </member>
        <member name="T:Apache.NMS.DestinationType">
            <summary>
            Represents the type of the destination such as a queue or topic.
            </summary>
        </member>
        <member name="T:Apache.NMS.IDestination">
            <summary>
            A base interface for destinations such as queues or topics
            </summary>
        </member>
        <member name="T:Apache.NMS.IMapMessage">
            <summary>
            Represents a Map message which contains key and value pairs which are
            of primitive types
            </summary>
        </member>
        <member name="T:Apache.NMS.MessageListener">
            <summary>
            A delegate that can receive messages async.
            </summary>
        </member>
        <member name="T:Apache.NMS.IMessageConsumer">
            <summary>
            A consumer of messages
            </summary>
        </member>
        <member name="M:Apache.NMS.IMessageConsumer.Receive">
            <summary>
            Waits until a message is available and returns it
            </summary>
        </member>
        <member name="M:Apache.NMS.IMessageConsumer.Receive(System.TimeSpan)">
            <summary>
            If a message is available within the timeout duration it is returned otherwise this method returns null
            </summary>
        </member>
        <member name="M:Apache.NMS.IMessageConsumer.ReceiveNoWait">
            <summary>
            If a message is available immediately it is returned otherwise this method returns null
            </summary>
        </member>
        <member name="M:Apache.NMS.IMessageConsumer.Close">
            <summary>
            Closes the message consumer. 
            </summary>
            <remarks>
            Clients should close message consumers them when they are not needed.
            This call blocks until a receive or message listener in progress has completed.
            A blocked message consumer receive call returns null when this message consumer is closed.
            </remarks>
        </member>
        <member name="E:Apache.NMS.IMessageConsumer.Listener">
            <summary>
            An asynchronous listener which can be used to consume messages asynchronously
            </summary>
        </member>
        <member name="T:Apache.NMS.IMessageProducer">
            <summary>
            An object capable of sending messages to some destination
            </summary>
        </member>
        <member name="M:Apache.NMS.IMessageProducer.Send(Apache.NMS.IMessage)">
            <summary>
            Sends the message to the default destination for this producer
            </summary>
        </member>
        <member name="M:Apache.NMS.IMessageProducer.Send(Apache.NMS.IMessage,System.Boolean,System.Byte,System.TimeSpan)">
            <summary>
            Sends the message to the default destination with the explicit QoS configuration
            </summary>
        </member>
        <member name="M:Apache.NMS.IMessageProducer.Send(Apache.NMS.IDestination,Apache.NMS.IMessage)">
            <summary>
            Sends the message to the given destination
            </summary>
        </member>
        <member name="M:Apache.NMS.IMessageProducer.Send(Apache.NMS.IDestination,Apache.NMS.IMessage,System.Boolean,System.Byte,System.TimeSpan)">
            <summary>
            Sends the message to the given destination with the explicit QoS configuration
            </summary>
        </member>
        <member name="M:Apache.NMS.IMessageProducer.CreateMessage">
            <summary>
            Creates a new message with an empty body
            </summary>
        </member>
        <member name="M:Apache.NMS.IMessageProducer.CreateTextMessage">
            <summary>
            Creates a new text message with an empty body
            </summary>
        </member>
        <member name="M:Apache.NMS.IMessageProducer.CreateTextMessage(System.String)">
            <summary>
            Creates a new text message with the given body
            </summary>
        </member>
        <member name="M:Apache.NMS.IMessageProducer.CreateMapMessage">
            <summary>
            Creates a new Map message which contains primitive key and value pairs
            </summary>
        </member>
        <member name="M:Apache.NMS.IMessageProducer.CreateObjectMessage(System.Object)">
            <summary>
            Creates a new Object message containing the given .NET object as the body
            </summary>
        </member>
        <member name="M:Apache.NMS.IMessageProducer.CreateBytesMessage">
            <summary>
            Creates a new binary message
            </summary>
        </member>
        <member name="M:Apache.NMS.IMessageProducer.CreateBytesMessage(System.Byte[])">
            <summary>
            Creates a new binary message with the given body
            </summary>
        </member>
        <member name="T:Apache.NMS.InvalidDestinationException">
            <summary>
            An attempt is made to access an invalid destination
            </summary>
        </member>
        <member name="T:Apache.NMS.NMSException">
            <summary>
            Represents a NMS exception
            </summary>
        </member>
        <member name="T:Apache.NMS.IObjectMessage">
            <summary>
            Represents an Object message which contains a serializable .Net object.
            </summary>
        </member>
        <member name="T:Apache.NMS.IPrimitiveMap">
            <summary>
            Represents a Map of primitive types where the keys are all string instances
            and the values are strings or numbers.
            </summary>
        </member>
        <member name="T:Apache.NMS.IQueue">
            <summary>
            Represents a queue in a message broker. A message sent to a queue is delivered
            to at most one consumer on the queue.
            </summary>
        </member>
        <member name="T:Apache.NMS.ISession">
            <summary>
            Represents a single unit of work on an IConnection.
            So the ISession can be used to perform transactional receive and sends
            </summary>
        </member>
        <member name="M:Apache.NMS.ISession.CreateProducer">
            <summary>
            Creates a producer of messages
            </summary>
        </member>
        <member name="M:Apache.NMS.ISession.CreateProducer(Apache.NMS.IDestination)">
            <summary>
            Creates a producer of messages on a given destination
            </summary>
        </member>
        <member name="M:Apache.NMS.ISession.CreateConsumer(Apache.NMS.IDestination)">
            <summary>
            Creates a consumer of messages on a given destination
            </summary>
        </member>
        <member name="M:Apache.NMS.ISession.CreateConsumer(Apache.NMS.IDestination,System.String)">
            <summary>
            Creates a consumer of messages on a given destination with a selector
            </summary>
        </member>
        <member name="M:Apache.NMS.ISession.CreateConsumer(Apache.NMS.IDestination,System.String,System.Boolean)">
            <summary>
            Creates a consumer of messages on a given destination with a selector
            </summary>
        </member>
        <member name="M:Apache.NMS.ISession.CreateDurableConsumer(Apache.NMS.ITopic,System.String,System.String,System.Boolean)">
            <summary>
            Creates a named durable consumer of messages on a given destination with a selector
            </summary>
        </member>
        <member name="M:Apache.NMS.ISession.GetQueue(System.String)">
            <summary>
            Returns the queue for the given name
            </summary>
        </member>
        <member name="M:Apache.NMS.ISession.GetTopic(System.String)">
            <summary>
            Returns the topic for the given name
            </summary>
        </member>
        <member name="M:Apache.NMS.ISession.CreateTemporaryQueue">
            <summary>
            Creates a temporary queue
            </summary>
        </member>
        <member name="M:Apache.NMS.ISession.CreateTemporaryTopic">
            <summary>
            Creates a temporary topic
            </summary>
        </member>
        <member name="M:Apache.NMS.ISession.CreateMessage">
            <summary>
            Creates a new message with an empty body
            </summary>
        </member>
        <member name="M:Apache.NMS.ISession.CreateTextMessage">
            <summary>
            Creates a new text message with an empty body
            </summary>
        </member>
        <member name="M:Apache.NMS.ISession.CreateTextMessage(System.String)">
            <summary>
            Creates a new text message with the given body
            </summary>
        </member>
        <member name="M:Apache.NMS.ISession.CreateMapMessage">
            <summary>
            Creates a new Map message which contains primitive key and value pairs
            </summary>
        </member>
        <member name="M:Apache.NMS.ISession.CreateObjectMessage(System.Object)">
            <summary>
            Creates a new Object message containing the given .NET object as the body
            </summary>
        </member>
        <member name="M:Apache.NMS.ISession.CreateBytesMessage">
            <summary>
            Creates a new binary message
            </summary>
        </member>
        <member name="M:Apache.NMS.ISession.CreateBytesMessage(System.Byte[])">
            <summary>
            Creates a new binary message with the given body
            </summary>
        </member>
        <member name="M:Apache.NMS.ISession.Close">
            <summary>
            Closes the session.  There is no need to close the producers and consumers
            of a closed session.
            </summary>
        </member>
        <member name="M:Apache.NMS.ISession.Commit">
            <summary>
            If this is a transactional session then commit all message
            send and acknowledgements for producers and consumers in this session
            </summary>
        </member>
        <member name="M:Apache.NMS.ISession.Rollback">
            <summary>
            If this is a transactional session then rollback all message
            send and acknowledgements for producers and consumers in this session
            </summary>
        </member>
        <member name="T:Apache.NMS.ITemporaryQueue">
            <summary>
            Represents a temporary queue which exists for the duration 
            of the IConnection which created it.
            </summary>
        </member>
        <member name="T:Apache.NMS.ITemporaryTopic">
            <summary>
            Represents a temporary topic which exists for the duration 
            of the IConnection which created it.
            </summary>
        </member>
        <member name="T:Apache.NMS.ITextMessage">
            <summary>
            Represents a text based message
            </summary>
        </member>
        <member name="T:Apache.NMS.ITopic">
            <summary>
            Represents a topic in a message broker. A message sent to a topic
            is delivered to all consumers on the topic who are interested in the message.
            </summary>
        </member>
        <member name="T:Apache.NMS.ITrace">
            <summary>
            The ITrace interface is used internally by ActiveMQ to log messages.
            The client aplication may provide an implementation of ITrace if it wishes to
            route messages to a specific destination.
            </summary>
            <remarks>
            <para>
            Use the <see cref="T:Apache.NMS.Tracer"/> class to register an instance of ITrace as the
            active trace destination.
            </para>
            </remarks>
        </member>
        <member name="T:Apache.NMS.NMSConnectionException">
            <summary>
            Represents a connection failure.
            </summary>
        </member>
        <member name="M:Apache.NMS.NMSConnectionFactory.#ctor(System.String,System.Object[])">
            <summary>
            The ConnectionFactory object must define a constructor that takes as a minimum a Uri object.
            Any additional parameters are optional, but will typically include a Client ID string.
            </summary>
            <param name="providerURI"></param>
            <param name="constructorParams"></param>
        </member>
        <member name="M:Apache.NMS.NMSConnectionFactory.#ctor(System.Uri,System.Object[])">
            <summary>
            The ConnectionFactory object must define a constructor that takes as a minimum a Uri object.
            Any additional parameters are optional, but will typically include a Client ID string.
            </summary>
            <param name="uriProvider"></param>
            <param name="constructorParams"></param>
        </member>
        <member name="M:Apache.NMS.NMSConnectionFactory.CreateConnectionFactory(System.Uri,System.Object[])">
            <summary>
            Create a connection factory that can create connections for the given scheme in the URI.
            </summary>
            <param name="uriProvider"></param>
            <param name="constructorParams"></param>
            <returns></returns>
        </member>
        <member name="M:Apache.NMS.NMSConnectionFactory.GetTypeForScheme(System.String)">
            <summary>
            Finds the Type associated with the given scheme.
            </summary>
            <param name="scheme"></param>
            <returns></returns>
        </member>
        <member name="M:Apache.NMS.NMSConnectionFactory.LookupConnectionFactoryInfo(System.String,System.String@,System.String@)">
            <summary>
            Lookup the connection factory assembly filename and class name.
            Read an external configuration file that maps scheme to provider implementation.
            Load XML config files named: nmsprovider-{scheme}.config
            Following is a sample configuration file named nmsprovider-jms.config.  Replace
            the parenthesis with angle brackets for proper XML formatting.
            
            	(?xml version="1.0" encoding="utf-8" ?)
            	(configuration)
            		(provider assembly="MyCompany.NMS.JMSProvider.dll" classFactory="MyCompany.NMS.JMSProvider.ConnectionFactory"/)
            	(/configuration)
            
            This configuration file would be loaded and parsed when a connection uri with a scheme of 'jms'
            is used for the provider.  In this example the connection string might look like:
            	jms://localhost:7222
            
            </summary>
            <param name="scheme"></param>
            <param name="assemblyFileName"></param>
            <param name="factoryClassName"></param>
            <returns></returns>
        </member>
        <member name="M:Apache.NMS.NMSConnectionFactory.MakeParameterArray(System.Object,System.Object[])">
            <summary>
            Create an object array containing the parameters to pass to the constructor.
            </summary>
            <param name="firstParam"></param>
            <param name="varParams"></param>
            <returns></returns>
        </member>
        <member name="M:Apache.NMS.NMSConnectionFactory.CreateConnection">
            <summary>
            Creates a new connection
            </summary>
        </member>
        <member name="M:Apache.NMS.NMSConnectionFactory.CreateConnection(System.String,System.String)">
            <summary>
            Creates a new connection with the given user name and password
            </summary>
            <param name="userName"></param>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="P:Apache.NMS.NMSConnectionFactory.ConnectionFactory">
            <summary>
            The actual IConnectionFactory implementation that is being used.  This implemenation 
            depends on the scheme of the URI used when constructed.
            </summary>
        </member>
        <member name="T:Apache.NMS.NMSConstants">
            <summary>
            Defines a number of constants
            </summary>
        </member>
        <member name="T:Apache.NMS.NMSSecurityException">
            <summary>
            Represents a connection failure.
            </summary>
        </member>
    </members>
</doc>
